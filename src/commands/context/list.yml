description: List contexts in an organization.
parameters:
  owner-id:
    description: The unique ID of the owner of the context. Specify either this or owner-slug, one of which is required.
    type: string
    default: ""
  owner-slug:
    description: A string that represents an organization. Specify either this or owner-id, one of which is required. Cannot be used for accounts.
    type: string
    default: ""
  owner-type:
    description: The type of the owner. Defaults to "organization". Accounts are only used as context owners in server.
    type: enum
    enum: [account, organization]
    default: organization
  token:
    description: CircleCI API token, to authenticate the request.
    type: string
  base-url:
    description: CircleCI base URL to query.
    type: string
    default: https://circleci.com/api/v2
steps:
  - when:
      condition:
        and:
          - not:
              equal: [<< parameters.owner-id >>, ""]
          - not:
              equal: [<< parameters.owner-slug >>, ""]
      steps:
        - run:
            command: |
              printf "Cannot specify both owner-id and owner-slug." 1>&2
              exit 1
  - when:
      condition:
        not:
          equal: [<< parameters.owner-id >>, ""]
      steps:
        - run:
            description: Create a new context
            command: |
              curl -s -X GET --url "<< parameters.base-url >>/context \
                --header "Circle-Token: << parameters.token >>" \
                -d "owner-type=<< parameters.owner-type >>" \
                -d "owner-id=<< parameters.owner-id >>"
  - when:
      condition:
        not:
          equal: [<< parameters.owner-slug >>, ""]
      steps:
        - run:
            description: Create a new context
            command: |
              curl -s -X GET --url "<< parameters.base-url >>/context \
                --header "Circle-Token: << parameters.token >>" \
                -d "owner-type=<< parameters.owner-type >>" \
                -d "owner-slug=<< parameters.owner-slug >>"
  - when:
      condition:
        and:
          - equal: [<< parameters.owner-id >>, ""]
          - equal: [<< parameters.owner-slug >>, ""]
      steps:
        - run:
            command: |
              printf "Must specify one of owner-id and owner-slug." 1>&2
              exit 1
